package edu.unh.cs.cs619.bulletzone.model.events;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;
import org.greenrobot.eventbus.ThreadMode;

import java.util.ArrayList;
import java.util.Collection;

//This class is adapted from group Alpha's project from 2020, courtesy Gersi Doko
public class EventHistory {
    private int millisToKeepHistory = 30000; //30 seconds
    private ArrayList<GameEvent> history;
    private static EventHistory instance = null;
    private static Object lock = new Object();

    public static EventHistory getInstance() {
        if (instance == null) {
            instance = new EventHistory();
        }
        return instance;
    }

    /**
     * If no timestamp is specified return the whole list of events we have
     *
     * @return a list of history events
     */
    public Collection<GameEvent> getHistory() {
        this.trimHistory();
        return history;
    }

    /**
     * Get all the events since timeStampQueried
     *
     * @param timeStampQueried the timestamp since events have transpired
     * @return a list of events since the timeStampQueried
     */
    public Collection<GameEvent> getHistory(long timeStampQueried) {
        this.trimHistory();
        Collection<GameEvent> ret = (Collection<GameEvent>) history.clone();
        long curTime = System.currentTimeMillis();
        ret.removeIf(e -> e.getTime() <= timeStampQueried);
        return ret;
    }

    /**
     * Listener for any events generated by the server
     *
     * @param e the Event that was triggered
     */
    @Subscribe(threadMode = ThreadMode.MAIN)
    public void onEventNotification(GameEvent e) {
        history.add(e);
        history.sort(GameEvent.eventComparator);
    }

    public void clearHistory() {
        history.clear();
    }

    public long getMillisToKeepHistory() {
        return millisToKeepHistory;
    }


    //---------------------END-OF-PUBLIC-METHODS-------------------------
    private EventHistory() {
        history = new ArrayList<GameEvent>();
        EventBus.getDefault().register(this);

    }

    /**
     * Trims the log of events
     */
    private void trimHistory() {
        long curTime = System.currentTimeMillis();
        history.removeIf(n -> (curTime - n.getTime()) >= millisToKeepHistory);
    }

}
