//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.4.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package edu.unh.cs.cs619.bulletzone.rest;

import android.content.Context;
import edu.unh.cs.cs619.bulletzone.events.BusProvider_;
import edu.unh.cs.cs619.bulletzone.util.GridWrapper;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.UiThreadExecutor;

public final class GridPollerTask_
    extends GridPollerTask
{
    private Context context_;

    private GridPollerTask_(Context context) {
        context_ = context;
        init_();
    }

    public static GridPollerTask_ getInstance_(Context context) {
        return new GridPollerTask_(context);
    }

    private void init_() {
        this.busProvider = BusProvider_.getInstance_(context_);
        this.restClient = new BulletZoneRestClient_(context_);
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

    @Override
    public void onGridUpdate(final GridWrapper gw) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                GridPollerTask_.super.onGridUpdate(gw);
            }
        }
        , 0L);
    }

    @Override
    public void doPoll() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("grid_poller_task", 0L, "") {

            @Override
            public void execute() {
                try {
                    GridPollerTask_.super.doPoll();
                } catch (final Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }
        }
        );
    }
}
